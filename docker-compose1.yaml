version: '3'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - '2181:2181'

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - '9092:9092'
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: 'INTERNAL://:29092,EXTERNAL://:9092'
      KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://kafka:29092,EXTERNAL://localhost:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT: '6000'
      KAFKA_RESTART_ATTEMPTS: '10'
      KAFKA_RESTART_DELAY: '5'
      ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: '0'

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    restart: 'no'
    environment:
      KAFKA_BROKERCONNECT: 'kafka:29092'
      SCHEMAREGISTRY_CONNECT: http://schema-registry:8081
    ports:
      - 9000:9000
    depends_on:
      - kafka

  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    container_name: schema-registry
    ports:
      - '8081:8081'
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
      SCHEMA_REGISTRY_LISTENER: 'http://localhost:8081'
      SCHEMA_REGISTRY_KAFKA_URL: 'kafka:29092'
      SCHEMA_REGISTRY_HOST_NAME: 'localhost'
    depends_on:
      - zookeeper
      - kafka

networks:
  default:
    name: iot_network
